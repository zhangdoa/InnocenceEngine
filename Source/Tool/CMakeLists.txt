if (NOT INNO_PLATFORM_MAC)
add_executable(InnoGLSLParser GLSLParser.cpp)
set_target_properties(InnoGLSLParser PROPERTIES FOLDER Tool)
target_link_libraries(InnoGLSLParser InnoCore)
if (INNO_PLATFORM_LINUX)
target_link_libraries(InnoGLSLParser -lX11 -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor -ldl -lm -lpthread -lstdc++fs)
endif (INNO_PLATFORM_LINUX)
endif (NOT INNO_PLATFORM_MAC)

if (INNO_PLATFORM_WIN)
add_executable(InnoBaker WIN32 InnoBaker.h InnoBaker.cpp InnoBakerMain.cpp)
set_target_properties(InnoBaker PROPERTIES FOLDER Tool)
if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
  set_target_properties(InnoBaker PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
endif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
target_link_libraries(InnoBaker InnoEngine)
target_link_libraries(InnoBaker InnoDefaultGPUBuffers)
endif (INNO_PLATFORM_WIN)

if (NOT INNO_PLATFORM_MAC)
add_executable(InnoReflector InnoReflector.cpp)
set_target_properties(InnoReflector PROPERTIES FOLDER Tool)
target_link_libraries(InnoReflector InnoCore)
target_include_directories(InnoReflector PRIVATE "${INNO_INCLUDE_DIRECTORIES}/json")
if (INNO_PLATFORM_WIN)
include_directories($ENV{LLVM}/include)
target_link_libraries(InnoReflector $ENV{LLVM}/lib/libclang.lib)
if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
  set_target_properties(InnoReflector PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
endif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
endif (INNO_PLATFORM_WIN)
if (INNO_PLATFORM_LINUX)
target_link_libraries(InnoReflector -lX11 -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor -ldl -lm -lpthread -lstdc++fs)
endif (INNO_PLATFORM_LINUX)
endif (NOT INNO_PLATFORM_MAC)